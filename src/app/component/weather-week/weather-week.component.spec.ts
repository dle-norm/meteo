import { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';
import { ComponentFixture, TestBed } from '@angular/core/testing';
import { ActivatedRoute, Router } from '@angular/router';
import { AppService } from '../../shared/service/app.service';
import { WeatherWeekComponent } from './weather-week.component';

describe('AppComponent', () => {
  let component: WeatherWeekComponent;
  let fixture: ComponentFixture<WeatherWeekComponent>;
  const mockDate: string[] = ['2022-08-11T00:00', '2022-08-11T01:00', '2022-08-11T02:00', '2022-08-11T03:00', '2022-08-11T04:00', '2022-08-11T05:00', '2022-08-11T06:00', '2022-08-11T07:00', '2022-08-11T08:00', '2022-08-11T09:00', '2022-08-11T10:00', '2022-08-11T11:00', '2022-08-11T12:00', '2022-08-11T13:00', '2022-08-11T14:00', '2022-08-11T15:00', '2022-08-11T16:00', '2022-08-11T17:00', '2022-08-11T18:00', '2022-08-11T19:00', '2022-08-11T20:00', '2022-08-11T21:00', '2022-08-11T22:00', '2022-08-11T23:00', '2022-08-12T00:00', '2022-08-12T01:00', '2022-08-12T02:00', '2022-08-12T03:00', '2022-08-12T04:00', '2022-08-12T05:00', '2022-08-12T06:00', '2022-08-12T07:00', '2022-08-12T08:00', '2022-08-12T09:00', '2022-08-12T10:00', '2022-08-12T11:00', '2022-08-12T12:00', '2022-08-12T13:00', '2022-08-12T14:00', '2022-08-12T15:00', '2022-08-12T16:00', '2022-08-12T17:00', '2022-08-12T18:00', '2022-08-12T19:00', '2022-08-12T20:00', '2022-08-12T21:00', '2022-08-12T22:00', '2022-08-12T23:00', '2022-08-13T00:00', '2022-08-13T01:00', '2022-08-13T02:00', '2022-08-13T03:00', '2022-08-13T04:00', '2022-08-13T05:00', '2022-08-13T06:00', '2022-08-13T07:00', '2022-08-13T08:00', '2022-08-13T09:00', '2022-08-13T10:00', '2022-08-13T11:00', '2022-08-13T12:00', '2022-08-13T13:00', '2022-08-13T14:00', '2022-08-13T15:00', '2022-08-13T16:00', '2022-08-13T17:00', '2022-08-13T18:00', '2022-08-13T19:00', '2022-08-13T20:00', '2022-08-13T21:00', '2022-08-13T22:00', '2022-08-13T23:00', '2022-08-14T00:00', '2022-08-14T01:00', '2022-08-14T02:00', '2022-08-14T03:00', '2022-08-14T04:00', '2022-08-14T05:00', '2022-08-14T06:00', '2022-08-14T07:00', '2022-08-14T08:00', '2022-08-14T09:00', '2022-08-14T10:00', '2022-08-14T11:00', '2022-08-14T12:00', '2022-08-14T13:00', '2022-08-14T14:00', '2022-08-14T15:00', '2022-08-14T16:00', '2022-08-14T17:00', '2022-08-14T18:00', '2022-08-14T19:00', '2022-08-14T20:00', '2022-08-14T21:00', '2022-08-14T22:00', '2022-08-14T23:00', '2022-08-15T00:00', '2022-08-15T01:00', '2022-08-15T02:00', '2022-08-15T03:00', '2022-08-15T04:00', '2022-08-15T05:00', '2022-08-15T06:00', '2022-08-15T07:00', '2022-08-15T08:00', '2022-08-15T09:00', '2022-08-15T10:00', '2022-08-15T11:00', '2022-08-15T12:00', '2022-08-15T13:00', '2022-08-15T14:00', '2022-08-15T15:00', '2022-08-15T16:00', '2022-08-15T17:00', '2022-08-15T18:00', '2022-08-15T19:00', '2022-08-15T20:00', '2022-08-15T21:00', '2022-08-15T22:00', '2022-08-15T23:00', '2022-08-16T00:00', '2022-08-16T01:00', '2022-08-16T02:00', '2022-08-16T03:00', '2022-08-16T04:00', '2022-08-16T05:00', '2022-08-16T06:00', '2022-08-16T07:00', '2022-08-16T08:00', '2022-08-16T09:00', '2022-08-16T10:00', '2022-08-16T11:00', '2022-08-16T12:00', '2022-08-16T13:00', '2022-08-16T14:00', '2022-08-16T15:00', '2022-08-16T16:00', '2022-08-16T17:00', '2022-08-16T18:00', '2022-08-16T19:00', '2022-08-16T20:00', '2022-08-16T21:00', '2022-08-16T22:00', '2022-08-16T23:00', '2022-08-17T00:00', '2022-08-17T01:00', '2022-08-17T02:00', '2022-08-17T03:00', '2022-08-17T04:00', '2022-08-17T05:00', '2022-08-17T06:00', '2022-08-17T07:00', '2022-08-17T08:00', '2022-08-17T09:00', '2022-08-17T10:00', '2022-08-17T11:00', '2022-08-17T12:00', '2022-08-17T13:00', '2022-08-17T14:00', '2022-08-17T15:00', '2022-08-17T16:00', '2022-08-17T17:00', '2022-08-17T18:00', '2022-08-17T19:00', '2022-08-17T20:00', '2022-08-17T21:00', '2022-08-17T22:00', '2022-08-17T23:00'];
  ;
  beforeEach(async () => {
    await TestBed.configureTestingModule({
      declarations: [WeatherWeekComponent],
      providers: [
        {
          provide: AppService,
          useValue: {}
        },
        {
          provide: ActivatedRoute,
          useValue: {}
        },
        {
          provide: Router,
          useValue: {}
        }],
      schemas: [CUSTOM_ELEMENTS_SCHEMA]
    }).compileComponents();
  });

  beforeEach(() => {
    fixture = TestBed.createComponent(WeatherWeekComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('Init test : should create', () => {
    expect(component).toBeTruthy();
  });

  it('Time test : should give 7 ids at 12am', () => {
    expect(component.giveSlidingTimeId(mockDate)).toStrictEqual([12, 36, 60, 84, 108, 132, 156]);
    expect(component.giveSlidingTimeId(mockDate).length).toStrictEqual(7);
  });
});
